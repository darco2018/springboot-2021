spring.application.name=demo1

#--------------------- ACTUATOR ------------------
# can be expensive:
management.endpoints.web.exposure.include=*


# ----------------- DEV-TOOLS --------------------------
spring.devtools.livereload.enabled=true
#if you want restart only on a file change in particular file: spring.devtools.restart.trigger-file=.reloadtrigger

# This caused infinite loop for logging in console!!!!!!!!! at least with value set to ./
# spring.devtools.restart.additional-paths=./

# exclude from monitoring by dev tools
# spring.devtools.restart.exclude=/somedir


# ------------------ LOGGING INFO ------------

# I think these settings in app.props don't work when using  log4j2-spring.xml file or maybe they overwrite those settings?
# if log4j is not configured we use sl4j API with logback implementation

# Sets the root logging level - default is INFO
# logging.level.root=DEBUG

# in this app profile info is passed as VM argument  to runtime:
#       spring.profiles.active=prod => profile passed in IntelliJ Run/Edit Configurations
#      java -jar -Dspring.profiles.active=prod   spring-boot-demo.jar

# The setting below will give you error only logging in production and debug logging during development WITHOUT writing the output to a log file.
# which will improve the performance during development
# logging.file=

# logging to file:
# creates /tmp/<appname>.log
# only uncomment for production: logging.file=${java.io.tmpdir}/${spring.application.name}.log

# Here use strictly forward "/" slash for both Windows, Linux or any other os, otherwise, its won't work.
# logging.file=D:/spring_app_log_file.log
# To customize logging pattern.
# logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"


# These setting exclude beans from being visible, but preserve other things displayed when logging.level.root=INFO
# logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %msg%n
# logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%
#logging.level.root=DEBUG
#logging.level.o*=INFO
#logging.level.s*=INFO
#logging.level.cloud.javacoder.demo1.Demo1NameApplication=WARN
#logging.level.web=DEBUG

#logging.level.org.springframework.web: DEBUG
#logging.level.org.hibernate: ERROR